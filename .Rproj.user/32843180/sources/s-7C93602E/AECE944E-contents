##----PART #1---------------------------------------------------------

# CREATE A RANKED LIST OF MATCHES BASED ON DISTANCE.

# Libraries loaded in BUILD_METRICS.R script
library(reshape2)
library(tidyverse)
library(random)

df <- datasets::iris # needs to have stores/unit as rownames
df$flower_num <- as.integer(rownames(df))
df <- select(df, flower_num, everything()) %>% select(-Species)


function ( input_data ) {

    # Prep for Distance: Convert column #1 to rownames and scale the dataset

    rownames(df) <- df[1]
    df_scaled <- scale(df[-1])

    #---- Build the Distant Matrix----
    DF_DIST <- dist(df_scaled , method = "euclidian")

    # Convert to Matrix
    DF_RANK_BASE <- as.matrix(DF_DIST)

    # Force NA on upper triangle and diagnol of 0's
    DF_RANK_BASE[upper.tri(DF_RANK_BASE)] <- NA
    diag(DF_RANK_BASE) <- NA

    #----Produce list of one to one distance Metric----
    DF_RANK_BASE_1 <- reshape2::melt(DF_RANK_BASE)
    names(DF_RANK_BASE_1) <- c("CONTROL","TEST","DIST_Q")

    DF_DIST_FINAL <- DF_RANK_BASE_1 %>% na.omit() %>%
      dplyr::arrange(TEST,DIST_Q,CONTROL)


    ##----PART #2----------------------------------------------------------

    # RANDOMLY SELECT THE LIST/DF OF THE TEST AND CONTROL GROUPS

    # Select random number for seed from random.org

    rand_num <- randomNumbers(n = 1, min = 1, max = 1000000000, 1)
    set.seed( rand_num ) # Number Generated by Random.org

    DF_TEST <- df %>% sample_n(size = 10) # Need to include a InputSelector, sample size of test

    # Test and Control List

    CONTROL_STR_LIST <- DF_DIST_FINAL %>% filter(!CONTROL %in% (DF_TEST[1])) %>%
      filter(TEST %in% (DF_TEST[1])) %>%
      group_by(TEST) %>%
      mutate(DIST_RANK = min_rank(DIST_Q)) %>%
      filter(DIST_RANK == 1) %>%
      select(-DIST_RANK) %>%
      mutate(GROUP = row_number())

    return(CONTROL_STR_LIST)
      # assign( CONTROL_STR_LIST, paste0("Randomized Selection_seed_",rand_num), envir = .GlobalEnv #)
  }
